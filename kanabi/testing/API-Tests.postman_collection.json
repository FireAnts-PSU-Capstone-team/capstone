{
	"info": {
		"_postman_id": "72fe7164-c425-46bc-b65a-738e6335b39f",
		"name": "API-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Unexpected Condition Recovery",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c63e7548-ab9f-4973-9486-3f48e1527d28",
						"exec": [
							"pm.test(\"Unexpected Condition\", function () {",
							"    pm.response.to.have.status(500);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    {\n\t\t\"Submission date\": \"01/01/20\",\n    \t\"Entity\": \"The Greenhouse1\",\n    \t\"DBA\": \"Boss Nass's1\",\n    \t\"Facility Address\": \"197 N Electric Ave\",\n    \t\"Facility Suite #\": \"\",\n    \t\"Facility Zip\": \"97202\",\n    \t\"Mailing Address\": \"101 NE Tabor Dr\",\n    \t\"MRL\": \"MRL48\",\n    \t\"Neighborhood Association\": \"Arbor Lodge\",\n    \t\"Compliance Region\": \"SE\",\n    \t\"Primary Contact First Name\": \"Ashley\",\n    \t\"Primary Contact Last Name\": \"Clark\",\n    \t\"Email\": \"ac@example.com\",\n    \t\"Phone\": \"971-245-0996\",\n    \t\"Endorse Type\": \"EX,CT\",\n    \t\"License Type\": \"MR\",\n    \t\"Repeat location?\": \"N\",\n    \t\"App complete?\": \"Y\",\n    \t\"Fee Schedule\": \"2020\",\n    \t\"Receipt No.\": 67,\n    \t\"Cash Amount\": \"$1500\",\n    \t\"Check Amount\": \"0\",\n    \t\"Card Amount\": \"\",\n    \t\"Check No. / Approval Code\": \"512\",\n    \t\"MRL#\": \"MRL48\",\n    \t\"Notes\": \"\"\n    },\n    {\n    \t\"Submission date\": \"01/01/20\",\n    \t\"Entity\": \"The Greenhouse2\",\n    \t\"DBA\": \"Boss Nass's2\",\n    \t\"Facility Address\": \"198 N Electric Ave\",\n    \t\"Facility Suite #\": \"\",\n    \t\"Facility Zip\": \"97201\",\n    \t\"Mailing Address\": \"102 NE Tabor Dr\",\n    \t\"MRL\": \"MRL49\",\n    \t\"Neighborhood Association\": \"Arbor Lodge\",\n    \t\"Compliance Region\": \"SE\",\n    \t\"Primary Contact First Name\": \"Ashley1\",\n    \t\"Primary Contact Last Name\": \"Clark1\",\n    \t\"Email\": \"ac@example22.com\",\n    \t\"Phone\": \"971-245-0995\",\n    \t\"Endorse Type\": \"EX,CT\",\n    \t\"License Type\": \"MR\",\n    \t\"Repeat location?\": \"N\",\n    \t\"App complete?\": \"Y\",\n    \t\"Fee Schedule\": \"2020\",\n    \t\"Receipt No.\": 67,\n\t    \"Cash Amount\": \"$1500\",\n\t    \"Check Amount\": \"0\",\n\t    \"Card Amount\": \"\",\n\t    \"Check No. / Approval Code\": \"512\",\n    \t\"MRL#\": \"MRL48\",\n\t    \"Notes\": \"\"\n    }\n}\n"
				},
				"url": {
					"raw": "https://localhost/load?table=intake",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					],
					"query": [
						{
							"key": "table",
							"value": "intake"
						}
					]
				},
				"description": "Update"
			},
			"response": []
		},
		{
			"name": "Incomplete Intake Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d2bc42ab-3ec1-4814-8dc2-8da1ee0a1c46",
						"exec": [
							"pm.test(\"Incomplete Intake Request\", function () {",
							"    pm.response.to.have.status(400);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"Submission date\": \"01/01/18\",\n  \"Entity\": \"The invalid house\",\n  \"DBA\": \"invalid Boss Nass's\",\n  \"Facility Address\": \"197 N invalid Ave\",\n  \"Facility Suite #\": \"\",\n  \"Facility Zip\": \"97207\",\n  \"Mailing Address\": \"100 NE invalid Dr\",\n  \"MRL\": \"MRL48\",\n  \"Neighborhood Association\": \"invalid Lodge\",\n  \"Compliance Region\": \"SE\",\n  \"Primary Contact First Name\": \"Ashley-invalid\",\n  \"Primary Contact Last Name\": \"Clarks\",\n  \"Email\": \"ac@invalid.com\",\n  \"Phone\": \"971-111-0996\",\n  \"Endorse Type\": \"EX,CT\",\n  \"License Type\": \"MR\",\n  \"Repeat location?\": \"N\",\n  \"App complete?\": \"Y\",\n\"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/load?table=intake",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					],
					"query": [
						{
							"key": "table",
							"value": "intake"
						}
					]
				},
				"description": "Invalid Intake, missing data"
			},
			"response": []
		},
		{
			"name": "Empty Intake Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c51c74c8-3ddc-4a7e-a2b3-bf522db27cdd",
						"exec": [
							"pm.test(\"Incomplete Intake Request\", function () {",
							"    pm.response.to.have.status(400);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/load?table=intake",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					],
					"query": [
						{
							"key": "table",
							"value": "intake"
						}
					]
				},
				"description": "Invalid Intake, missing data"
			},
			"response": []
		},
		{
			"name": "Single Intake Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2cb63e00-d7ca-437b-9fbc-78fe45267642",
						"exec": [
							"pm.test(\"Single Intake Request\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"PUT completed\");",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Submission date\": \"01/01/20\",\n    \"Entity\": \"Greenbay1\",\n    \"DBA\": \"DBA's1\",\n    \"Facility Address\": \"197 N Foo Ave\",\n    \"Facility Suite #\": \"\",\n    \"Facility Zip\": \"97402\",\n    \"Mailing Address\": \"101 NE Abot Dr\",\n    \"MRL\": \"MRL48\",\n    \"Neighborhood Association\": \"Abot Lodge\",\n    \"Compliance Region\": \"SE\",\n    \"Primary Contact First Name\": \"Ash\",\n    \"Primary Contact Last Name\": \"Clk\",\n    \"Email\": \"a22c@example.com\",\n    \"Phone\": \"971-215-0996\",\n    \"Endorse Type\": \"EX,CT\",\n    \"License Type\": \"MR\",\n    \"Repeat location?\": \"N\",\n    \"App complete?\": \"Y\",\n    \"Fee Schedule\": \"2020\",\n    \"Receipt No.\": 67,\n    \"Cash Amount\": \"$1500\",\n    \"Check Amount\": \"0\",\n    \"Card Amount\": \"\",\n    \"Check No. / Approval Code\": \"512\",\n    \"MRL#\": \"MRL999\",\n    \"Notes\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/load?table=intake",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					],
					"query": [
						{
							"key": "table",
							"value": "intake"
						}
					]
				},
				"description": "Update"
			},
			"response": []
		},
		{
			"name": "Duplicate Intake",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8f7a730-0b40-4187-b04a-77a95dac8bc4",
						"exec": [
							"pm.test(\"Duplicate Intake Request\", function (){",
							"    pm.expect(pm.response.text()).to.include(\"PUT failed\");",
							"}",
							");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Submission date\": \"01/01/20\",\n    \"Entity\": \"Greenbay1\",\n    \"DBA\": \"DBA's1\",\n    \"Facility Address\": \"197 N Foo Ave\",\n    \"Facility Suite #\": \"\",\n    \"Facility Zip\": \"97402\",\n    \"Mailing Address\": \"101 NE Abot Dr\",\n    \"MRL\": \"MRL48\",\n    \"Neighborhood Association\": \"Abot Lodge\",\n    \"Compliance Region\": \"SE\",\n    \"Primary Contact First Name\": \"Ash\",\n    \"Primary Contact Last Name\": \"Clk\",\n    \"Email\": \"a22c@example.com\",\n    \"Phone\": \"971-215-0996\",\n    \"Endorse Type\": \"EX,CT\",\n    \"License Type\": \"MR\",\n    \"Repeat location?\": \"N\",\n    \"App complete?\": \"Y\",\n    \"Fee Schedule\": \"2020\",\n    \"Receipt No.\": 67,\n    \"Cash Amount\": \"$1500\",\n    \"Check Amount\": \"0\",\n    \"Card Amount\": \"\",\n    \"Check No. / Approval Code\": \"512\",\n    \"MRL#\": \"MRL999\",\n    \"Notes\": \"\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/load?table=intake",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					],
					"query": [
						{
							"key": "table",
							"value": "intake"
						}
					]
				},
				"description": "Update"
			},
			"response": []
		},
		{
			"name": "Multi Intake",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5bf3f762-6c30-4c07-ad68-5f982244aeac",
						"exec": [
							"var value = pm.environment.get(\"inc\");",
							"",
							"pm.environment.set(\"inc\", value+1);",
							"",
							"pm.test(\"Multi Intake Request\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"PUT completed\");",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "ced4b6b8-5fa6-4748-90d1-bee5e86102f0",
						"exec": [
							"var inc = pm.environment.get(\"inc\");",
							"",
							"if( !inc) {",
							"    pm.environment.set(\"inc\", 1);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Submission date\": \"01/01/20\",\n    \"Entity\": \"The Greenhouse{{inc}}\",\n    \"DBA\": \"Boss Nass's{{inc}}\",\n    \"Facility Address\": \"19{{inc}} N Electric Ave\",\n    \"Facility Suite #\": \"\",\n    \"Facility Zip\": \"97201\",\n    \"Mailing Address\": \"10{{inc}} NE Tabor Dr\",\n    \"MRL\": \"MRL{{inc}}\",\n    \"Neighborhood Association\": \"Arbor Lodge{{inc}}\",\n    \"Compliance Region\": \"SE\",\n    \"Primary Contact First Name\": \"Ashley{{inc}}\",\n    \"Primary Contact Last Name\": \"Clark{{inc}}\",\n    \"Email\": \"{{inc}}@example.com\",\n    \"Phone\": \"971-245-0996\",\n    \"Endorse Type\": \"EX,CT\",\n    \"License Type\": \"MR\",\n    \"Repeat location?\": \"N\",\n    \"App complete?\": \"Y\",\n    \"Fee Schedule\": \"2020\",\n    \"Receipt No.\": \"{{inc}}\",\n    \"Cash Amount\": \"$1500\",\n    \"Check Amount\": \"0\",\n    \"Card Amount\": \"\",\n    \"Check No. / Approval Code\": \"{{inc}}\",\n    \"MRL#\": \"MRL{{inc}}\",\n    \"Notes\": \"{{inc}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/load?table=intake",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					],
					"query": [
						{
							"key": "table",
							"value": "intake"
						}
					]
				},
				"description": "Update"
			},
			"response": []
		},
		{
			"name": "Invalid URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b25e816-ce7c-4615-bdb8-7f261006158c",
						"exec": [
							"pm.test(\"Invalid URL\", function () {",
							"    pm.response.to.have.status(404);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://localhost/foo",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"foo"
					]
				},
				"description": "Tests for bad URL"
			},
			"response": []
		},
		{
			"name": "File Intake",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "178dfbf5-62c3-422f-9777-8a8de3eb84cb",
						"exec": [
							"pm.test(\"File Intake\", function () {",
							"    pm.response.to.have.status(500);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "./Sample-100entries.xlsx"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/load",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					]
				},
				"description": "Update"
			},
			"response": []
		},
		{
			"name": "Invalid URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4aa8a526-0348-48f4-86f9-e761c08a0581",
						"exec": [
							"pm.test(\"Invalid URL\", function () {",
							"    pm.response.to.have.status(404);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://localhost/foo",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"foo"
					]
				},
				"description": "Tests for bad URL"
			},
			"response": []
		},
		{
			"name": "No File Provided",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6c70235-b8ac-43f6-8985-367abc176a33",
						"exec": [
							"pm.test(\"No File\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"No file listed\");",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://localhost/load?file=",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"load"
					],
					"query": [
						{
							"key": "file",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid URL",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8be423e1-a6bd-41be-bb45-6e0f15101eec",
						"exec": [
							"pm.test(\"Invalid URL\", function () {",
							"    pm.response.to.have.status(404);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/foo",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"foo"
					]
				},
				"description": "Tests for bad URL"
			},
			"response": []
		},
		{
			"name": "Bad Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f549478e-0937-4e7e-a058-0a2a29403c2c",
						"exec": [
							"pm.test(\"Bad Table\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Table foo does not exist.\");",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/list?table=foo",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"list"
					],
					"query": [
						{
							"key": "table",
							"value": "foo"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Metadata Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "70717010-e695-450f-a48c-5bb71df3a6e1",
						"exec": [
							"pm.test(\"Get Metadata\", function () {",
							"    pm.response.to.have.status(200);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/list?table=metadata",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"list"
					],
					"query": [
						{
							"key": "table",
							"value": "metadata"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "List Intake Table",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74446b2f-2491-4c9d-aa7e-c5b50b06b2b8",
						"exec": [
							"pm.test(\"Get Intake\", function () {",
							"    pm.response.to.have.status(200);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost/list?table=intake",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"list"
					],
					"query": [
						{
							"key": "table",
							"value": "intake"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Metadata Endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b3a4f061-ea69-4172-ad1a-824e1fefb34d",
						"exec": [
							"pm.test(\"Get Metadata Endpont\", function () {",
							"    pm.response.to.have.status(200);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost/metadata",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"path": [
						"metadata"
					]
				}
			},
			"response": []
		},
		{
			"name": "Base Endpoint",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fba2d32c-e393-45dd-aa62-35457bd98b9e",
						"exec": [
							"pm.test(\"Base Endpont\", function () {",
							"    pm.response.to.have.status(200);",
							"}",
							")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost",
					"protocol": "https",
					"host": [
						"localhost"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}