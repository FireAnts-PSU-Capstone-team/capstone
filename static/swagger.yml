openapi: 3.0.1
info:
  title: Kanabi
  description: Spreadsheet ingestor and data management tool for the Department of
    Community and Civic Life's cannabis licensing program.
  contact:
    name: Project Lead
    email: andrew13haley@gmail.com
  version: 1.0.0
servers:
- url: https://localhost:443/
paths:
  /metadata:
    get:
      summary: View file metadata
      description: Displays the contents of the metadata table.
      responses:
        200:
          description: Contents of metadata table
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/metadata'
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Standard500ErrorResponse'
  /list:
    get:
      summary: Displays the contents of a table
      description: Returns a list of the table's records
      parameters:
      - name: table
        in: query
        description: Name of table to display
        required: true
        schema:
          type: string
      responses:
        200:
          description: Contents of table
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/table'
        400:
          description: Table name not supplied
          content:
            application/json: {}
        404:
          description: Named table does not exist
          content:
            application/json: {}
        500:
          description: An unexpected error occured.
          content:
            application/json: {}
    post:
      summary: Filter table data
      description: Returns a filtered subset of data based on a POSTed query in JSON
        format
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/query_request'
      responses:
        200:
          description: Requested data
          content:
            application/json: {}
        400:
          description: Query could not be processed
          content:
            application/json: {}
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Standard500ErrorResponse'

  /load:
    put:
      summary: Inserts a row
      description: Upload a single row and insert it into the named table.
      parameters:
      - name: table
        in: query
        description: Name of table to insert into
        required: true
        schema:
          type: string
      requestBody:
        required: true
        description: JSON object of row to insert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/table_row'
      responses:
        200:
          description: Row insertion successful
          content:
            application/json: {}
        400:
          description: Table name not supplied
          content:
            application/json: {}
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Standard500ErrorResponse'
    post:
      summary: Uploads a file
      description: Add the contents of a file to the database. Must be a .xls or .xlsx file.
      parameters:
      - name: filename
        in: query
        description: Name of file to process
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet: {}
          application/vnd.ms-excel: {}
      responses:
        200:
          description: File successfully consumed
          content:
            application/json: {}
        400:
          description: File name not supplied
          content:
            application/json: {}
        404:
          description: File could not be located
          content:
            application/json: {}
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Standard500ErrorResponse'

  /delete:
    get:
      summary: Delete a row
      description: Delete specified row(s) from specified table
      parameters:
        - name: table
          in: query
          required: true
          description: Name of the table to delete from
          schema:
            type: string
        - name: row
          in: query
          required: true
          description: Integer of row ID to be deleted. Multipe IDs are separated by '+', e.g. "row=1+2"
          schema:
            type: integer
      responses:
        200:
          description: Row(s) successfully deleted
          content:
            application/json: {}
        400:
          description: No table/row specified in query
          content:
            application/json: {}
        404:
          description: Table doesn't exist or row input invalid
          content:
            application/json: {}
        500:
          description: An unexpected error occured.
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Standard500ErrorResponse'

components:
  schemas:
    query_request:
      type: object
      properties:
        table:
          type: string
        columns:
          type: array
          items:
            type: string
        where:
          $ref: '#/components/schemas/op_block'
      required:
        - table
    and_block:
      type: array
      items:
        $ref: '#/components/schemas/op_block'
      minItems: 2
      maxItems: 2
    or_block:
      type: array
      items:
        $ref: '#/components/schemas/op_block'
      minItems: 2
      maxItems: 2
    op:
      type: object
      properties:
        column:
          type: string
        op:
          type: string
        operand:
          oneOf:
            - type: integer
            - type: string
      required:
        - column
        - op
        - operand
      description: An operation, such as a column matching a certain value or pattern
    op_block:
      type: object
      oneOf:
        - $ref: '#/components/schemas/and_block'
        - $ref: '#/components/schemas/or_block'
        - $ref: '#/components/schemas/op'
    table_row:
      oneOf:
        - $ref: '#/components/schemas/intake'
        - $ref: '#/components/schemas/metadata'
        # add more here once more tables are defined
    table:
      type: array
      items:
        $ref: '#/components/schemas/table_row'
    intake:
      type: object
      description: Row from intake table in database
      properties:
        row:
          type: integer
        submission_date:
          type: string
          format: date-time
        entity:
          type: string
        dba:
          type: string
        facility_address:
          type: string
        facility_suite:
          type: string
        facility_zip:
          type: string
        mailing_address:
          type: string
        mrl:
          type: string
        neighborhood_association:
          type: string
        compliance_region:
          type: string
        primary_contact_first_name:
          type: string
        primary_contact_last_name:
          type: string
        email:
          type: string
        phone:
          type: string
        endorse_type:
          type: string
        license_type:
          type: string
        repeat_location:
          type: string
        app_complete:
          type: string
        fee_schedule:
          type: string
        receipt_num:
          type: integer
        cash_amount:
          type: string
        check_amount:
          type: string
        card_amount:
          type: string
        check_num_approval_code:
          type: string
        mrl_num:
          type: string
        notes:
          type: string
      required:
        - submission_date
        - entity
        - dba
        - facility_address
        - facility_suite
        - facility_zip
        - mailing_address
        - mrl
        - neighborhood_association
        - compliance_region
        - primary_contact_first_name
        - primary_contact_last_name
        - email
        - phone
        - endorse_type
        - license_type
        - repeat_location
        - app_complete
        - fee_schedule
        - receipt_num
        - cash_amount
        - check_amount
        - card_amount
        - check_num_approval_code
        - mrl_num
        - notes
    metadata:
      type: object
      description: Record of metadata captured when a file is uploaded to the database
      properties:
        filename:
          type: string
        creator:
          type: string
        size:
          minimum: 0
          type: integer
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        title:
          type: string
      required:
        - filename
        - creator
        - size
        - created
        - modified
        - lastModifiedBy
        - title
  responses:
    Standard500ErrorResponse:
      description: An unexpected error occured.
      content:
        application/json: {}
